Index: app/src/main/java/com/example/uit_app/ChangeAvatarActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.uit_app;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.squareup.picasso.MemoryPolicy;\r\nimport com.squareup.picasso.NetworkPolicy;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\nimport Model.UserAccount;\r\nimport Retrofit.IMyService;\r\nimport Retrofit.RetrofitClient;\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\nimport dmax.dialog.SpotsDialog;\r\nimport es.dmoral.toasty.Toasty;\r\nimport io.reactivex.Observer;\r\nimport io.reactivex.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.disposables.Disposable;\r\nimport io.reactivex.schedulers.Schedulers;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.RequestBody;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\n\r\npublic class ChangeAvatarActivity extends AppCompatActivity {\r\n\r\n    Button btnCamera, btnGallary, btnUpdateAvatar;\r\n    CircleImageView circle_avatar;\r\n//    Toolbar UserToolbar;\r\n\r\n    File file;\r\n    Bitmap bitmap;\r\n    UserAccount userAccount = new UserAccount();\r\n    IMyService iMyService;\r\n    AlertDialog alertDialog;\r\n\r\n    boolean flag=false,flag2=false;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_avatar);\r\n\r\n        setUIReference();\r\n\r\n        alertDialog= new SpotsDialog.Builder().setContext(this).build();\r\n        Retrofit retrofitClient= RetrofitClient.getInstance();\r\n        iMyService=retrofitClient.create(IMyService.class);\r\n        userAccount= (UserAccount) getIntent().getSerializableExtra(\"userAcc\");\r\n        String avurl=\"http://149.28.24.98:9000/upload/user_image/\";\r\n//        ActionToolBar();\r\n\r\n        Picasso.get().load(avurl+userAccount.getAva()).placeholder(R.drawable.avatar).error(R.drawable.avatar).networkPolicy(NetworkPolicy.NO_CACHE).memoryPolicy(MemoryPolicy.NO_CACHE).into(circle_avatar);\r\n\r\n        btnGallary.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M){\r\n                    if (checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE)\r\n                            == PackageManager.PERMISSION_DENIED){\r\n                        //permission not granted, request it.\r\n                        String[] permissions = {Manifest.permission.READ_EXTERNAL_STORAGE};\r\n                        //show popup for runtime permission\r\n                        requestPermissions(permissions, 1000);\r\n                    }\r\n                    else {\r\n                        //permission already granted\r\n                        pickImageFromGallery();\r\n                    }\r\n                }\r\n                else {\r\n                    //system os is less then marshmallow\r\n                    pickImageFromGallery();\r\n                }\r\n\r\n            }\r\n        });\r\n        btnCamera.setOnClickListener(new View.OnClickListener() {\r\n            @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (checkSelfPermission(Manifest.permission.CAMERA) == PackageManager.PERMISSION_DENIED)\r\n                {\r\n                    String[] permissions = {Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n                    //show popup for runtime permission\r\n                    requestPermissions(permissions, 100);\r\n                }\r\n                else\r\n                {\r\n                    Intent cameraIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\r\n                    startActivityForResult(cameraIntent, 100);\r\n                }\r\n            }\r\n        });\r\n        btnUpdateAvatar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(flag2==true) changeAvatar();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void changeAvatar() {\r\n        btnUpdateAvatar.setClickable(false);\r\n        btnUpdateAvatar.setEnabled(false);\r\n        RequestBody fileReqBody =\r\n                RequestBody.create(\r\n                        MediaType.parse(\"image.*\"),\r\n                        file\r\n                );\r\n        MultipartBody.Part part = MultipartBody.Part.createFormData(\"image\", file.getName(), fileReqBody);\r\n        RequestBody description = RequestBody.create(MediaType.parse(\"text/plain\"), \"image-type\");\r\n\r\n        alertDialog.show();\r\n        iMyService.changeAva(part,userAccount.getToken())\r\n                .subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(new Observer<Response<String>>() {\r\n                    @Override\r\n                    public void onSubscribe(Disposable d) {\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onNext(Response<String> stringResponse) {\r\n\r\n\r\n                        if(stringResponse.isSuccessful()){\r\n\r\n\r\n                            if(stringResponse.message().equals(\"OK\"))\r\n                            {\r\n                                String responseString=stringResponse.body().toString();\r\n                                String start=\"\\\"image\\\"\";\r\n                                String end=\"\\\"gender\\\"\";\r\n                                String avaname=between(start,end,responseString);\r\n                                String [] arr = avaname.split(\"\\\"\");\r\n                                userAccount.setAva(arr[1]);\r\n                                flag=true;\r\n                            }\r\n                            else{\r\n                                flag=false;\r\n                            }}\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Throwable e) {\r\n                        new android.os.Handler().postDelayed(\r\n                                new Runnable() {\r\n                                    public void run() {\r\n                                        alertDialog.dismiss();\r\n\r\n                                    }\r\n                                }, 500);\r\n                        Toast.makeText(ChangeAvatarActivity.this, e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                        flag=false;\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onComplete() {\r\n\r\n                        new android.os.Handler().postDelayed(\r\n                                new Runnable() {\r\n                                    public void run() {\r\n                                        alertDialog.dismiss();\r\n\r\n                                    }\r\n                                }, 500);\r\n\r\n                        if(flag==true)\r\n                        {\r\n                            Toasty.success(ChangeAvatarActivity.this, \"Cập nhật ảnh thành công\", Toast.LENGTH_SHORT).show();\r\n                            final Intent data = new Intent();\r\n\r\n                            data.putExtra(\"usernewAcc\", userAccount);\r\n\r\n                            setResult(Activity.RESULT_OK, data);\r\n\r\n                            finish();\r\n                        }\r\n                        else\r\n                            Toast.makeText(ChangeAvatarActivity.this, \"Cập nhật thất bại\", Toast.LENGTH_SHORT).show();\r\n\r\n                    }\r\n                });\r\n        btnUpdateAvatar.setEnabled(true);\r\n        btnUpdateAvatar.setClickable(true);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (resultCode == RESULT_OK && requestCode == 1000 && data.getData() != null){\r\n            //set image to image view\r\n\r\n            Uri path=data.getData();\r\n            try {\r\n\r\n                bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), path);\r\n                circle_avatar.setImageBitmap(bitmap);\r\n                file = new File(getRealPathFromURI(path));\r\n                flag2=true;\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n\r\n\r\n        }\r\n        else if(resultCode == RESULT_OK && requestCode == 1001)\r\n        {\r\n            bitmap= (Bitmap) data.getExtras().get(\"data\");\r\n\r\n            Uri path = getImageUri(ChangeAvatarActivity.this, bitmap);\r\n            circle_avatar.setImageBitmap(bitmap);\r\n            file = new File(getRealPathFromURI(path));\r\n            flag2=true;\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        switch (requestCode){\r\n            case 1000:{\r\n\r\n\r\n                if (grantResults.length >0 && grantResults[0] ==\r\n                        PackageManager.PERMISSION_GRANTED){\r\n                    //permission was granted\r\n                    pickImageFromGallery();\r\n                }\r\n                else {\r\n                    //permission was denied\r\n                    Toast.makeText(this, \"Permission denied...!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n            case 100:{\r\n                //  Toast.makeText(this, \"asd: \"+ PackageManager.PERMISSION_GRANTED, Toast.LENGTH_SHORT).show();\r\n                if (grantResults[0] == PackageManager.PERMISSION_GRANTED)\r\n                {\r\n                    // Toast.makeText(this, \"camera permission granted\", Toast.LENGTH_LONG).show();\r\n                    Intent cameraIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\r\n                    startActivityForResult(cameraIntent, 1001);\r\n                }\r\n                else\r\n                {\r\n                    Toast.makeText(this, \"camera permission denied\", Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    public static String between(String start, String end, String input) {\r\n        int startIndex = input.indexOf(start);\r\n        int endIndex = input.lastIndexOf(end);\r\n        if(startIndex == -1 || endIndex == -1) return input;\r\n        else return input.substring(startIndex + start.length(), endIndex + end.length()).trim();\r\n    }\r\n\r\n    private void pickImageFromGallery() {\r\n        Intent intent = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n        intent.setType(\"image/*\");\r\n        startActivityForResult(intent, 1000);\r\n    }\r\n    private String getRealPathFromURI(Uri uri) {\r\n        Cursor cursor = getContentResolver().query(uri, null, null, null, null);\r\n        cursor.moveToFirst();\r\n        int idx = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);\r\n        return cursor.getString(idx);\r\n    }\r\n    public Uri getImageUri(Context inContext, Bitmap inImage) {\r\n        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\r\n        inImage.compress(Bitmap.CompressFormat.JPEG, 100, bytes);\r\n        String path = MediaStore.Images.Media.insertImage(inContext.getContentResolver(), inImage, \"Title\", null);\r\n        return Uri.parse(path);\r\n    }\r\n\r\n//    private void ActionToolBar() {\r\n//        setSupportActionBar(UserToolbar);\r\n//        getSupportActionBar().setDisplayShowTitleEnabled(false);\r\n//        UserToolbar.setTitleTextColor(-1);\r\n//        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n//        UserToolbar.setNavigationOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                finish();\r\n//            }\r\n//        });\r\n//    }\r\n\r\n    private void setUIReference() {\r\n        btnCamera = findViewById(R.id.camera_btn);\r\n        btnGallary = findViewById(R.id.gallery_btn);\r\n        btnUpdateAvatar = findViewById(R.id.btnSavePassword);\r\n        circle_avatar = findViewById(R.id.imgview_avatar);\r\n//        UserToolbar = findViewById(R.id.UserToolbar);\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/example/uit_app/ChangeAvatarActivity.java	(revision 4b45a96a61c9135eb87e922027f43291da9e4d91)
+++ app/src/main/java/com/example/uit_app/ChangeAvatarActivity.java	(date 1604904298499)
@@ -49,6 +49,7 @@
 
     Button btnCamera, btnGallary, btnUpdateAvatar;
     CircleImageView circle_avatar;
+
 //    Toolbar UserToolbar;
 
     File file;
@@ -65,7 +66,6 @@
         setContentView(R.layout.activity_avatar);
 
         setUIReference();
-
         alertDialog= new SpotsDialog.Builder().setContext(this).build();
         Retrofit retrofitClient= RetrofitClient.getInstance();
         iMyService=retrofitClient.create(IMyService.class);
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.uit_app\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        compileOptions {\r\n            sourceCompatibility JavaVersion.VERSION_1_8\r\n            targetCompatibility JavaVersion.VERSION_1_8\r\n        }\r\n        }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    //Retrofit\r\n    implementation 'com.squareup.retrofit2:retrofit:2.4.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'\r\n    implementation 'androidx.annotation:annotation:1.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    implementation \"io.reactivex.rxjava2:rxandroid:2.0.2\"\r\n    implementation 'com.github.d-max:spots-dialog:1.1@aar'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n\r\n    // Junit\r\n    testImplementation(\"org.junit.jupiter:junit-jupiter-api:5.0.0\")\r\n    testImplementation 'junit:junit:4.12'\r\n\r\n    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'\r\n    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'\r\n    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'\r\n    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'\r\n    implementation 'com.google.android.material:material:1.3.0-alpha03'\r\n\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n\r\n\r\n\r\n    //Picasso\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    //Circle Image View\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    //Toasty\r\n    implementation 'com.github.GrenderG:Toasty:1.5.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 4b45a96a61c9135eb87e922027f43291da9e4d91)
+++ app/build.gradle	(date 1604370500556)
@@ -55,6 +55,8 @@
     implementation 'com.google.android.material:material:1.3.0-alpha03'
 
     implementation 'com.google.android.material:material:1.2.1'
+    implementation 'com.github.GrenderG:Toasty:1.5.0'
+
 
 
 
